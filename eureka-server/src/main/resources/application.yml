server:
  port: 9100

spring:
  profiles:
    active: master
  application:
    name: eureka

# 远程管理,暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

eureka-cluster-register:
  ip: localhost
  port: ${server.port}


eureka:
  instance:
    hostname: localhost
  server:
    enable-self-preservation: false #禁用保护模式
    #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    #默认30s
    responseCacheUpdateIntervalMs: 3000
    #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    #由于启用了evict其实就用不太上改这个配置了
    #默认180s
    responseCacheAutoExpirationInSeconds: 180

    #启用主动失效，并且每次主动失效检测间隔为3s
    eviction-interval-timer-in-ms: 3000

#    eureka server的缓存机制。eureka server中维护了两个缓存：readWriteCacheMap和readOnlyCacheMap 。
#    客户端需要从readOnlyCacheMap中获取服务列表，而前者负责更新操作，更新完的数据会定时和readOnlyCacheMap进行同步。
#    默认时间是30s。为了达到实时同步，可以选择禁用readOnlyCacheMap，但是这样会牺牲一定的性能。
#    eureka server 在对readWriteCacheMap 进行操作时，需要加锁
    use-read-only-response-cache: false

  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://${eureka-cluster-register.ip}:${eureka-cluster-register.port}/eureka/







